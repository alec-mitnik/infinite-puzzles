* {
  -webkit-tap-highlight-color: transparent;
  box-sizing: border-box;
  flex: 0 0 auto;
  min-width: 0;
  min-height: 0;
}

canvas {
  -webkit-touch-callout: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  user-select: none;
  touch-action: none;
}

html, body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  overscroll-behavior: none;
  touch-action: none;
}

html {
  background: #0062A5;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  font-size: clamp(62.5%, 2vmin + 0.125rem, 100%);

  &::before {
    content: '\1F300\FE0E' / '';
    color: #F9B70F00;
    text-shadow: 0 0 0 #F9B70F;
    position: absolute;
    width: 200px;
    line-height: 200px;
    font-size: 200px;
    animation:spin 0.5s linear infinite;
  }

  @media (prefers-reduced-motion: reduce) {
    &::before {
      animation: none;
      display: none;
    }
  }
}

body.loading, #canvasContainer.loading {
  transition: opacity 0s;
  opacity: 0;
}

@-moz-keyframes spin { 100% { -moz-transform: rotate(-360deg); } }
@-webkit-keyframes spin { 100% { -webkit-transform: rotate(-360deg); } }
@keyframes spin { 100% { -webkit-transform: rotate(-360deg); transform:rotate(-360deg); } }

body {
  transition: opacity 1s;
  position: relative;
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  font-family: Arial, sans-serif;
  color: white;

  /* Note that negative margin offscreen doesn't work well with
  relatively positioned immediate children, and screen reader focus
  of cutoff elements causes scrolling even with overflow hidden. */
}

#puzzleGames {
  display: flex;
  flex-direction: column;
}

#canvasContainer {
  transition: opacity 1s;
  background-color: #000000; /* For browsers that do not support gradients */
  background-image: repeating-linear-gradient(45deg, #333366, #333366 6px, #000000 6px, #000000 12px);
  flex: 1 1 auto;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  container-type: size;

  &.home {
    background: #333366;
  }
}

#startButton {
  position: absolute;
  width: 100%;
  height: 100%;
  border: none;
  background-color: transparent;
  color: #ffffff;
  font-size: 24px;
}

canvas#puzzleCanvas {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  max-height: 100%;
  max-width: 100%;
  margin: auto;
}

#canvasContainer.started #startButton {
  display: none;
}

#controls.solved {
  #generateNewPuzzleButton, #nextTutorialButton {
    /* Prevent the scaling from affecting the focus outline */
    overflow: hidden;

    > span {
      transform: scale(1);
      animation: scaleFlare 2s ease-in-out infinite;
      color: #F9B70F;

      @media (prefers-reduced-motion: reduce) {
        animation-iteration-count: 1.5;
        animation-fill-mode: forwards;
      }
    }
  }
}

#tutorialButton.recommended:not(.active) {
  /* Prevent the scaling from affecting the focus outline */
  overflow: hidden;

  > span {
    transform: scale(1);
    animation: scaleFlare 2s ease-in-out infinite;
    color: #F9B70F;

    @media (prefers-reduced-motion: reduce) {
      animation-iteration-count: 1.5;
      animation-fill-mode: forwards;
    }
  }
}

@keyframes scaleFlare {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.5);
  }
}

#difficulty-group {
  flex: 4;
  display: flex;
  justify-content: space-around;
  align-items: stretch;

  label {
    position: relative;
  }

  input[type="radio"] {
    /* Easy CSS reset that even gets rid of the background color change
    in Safari left over by appearance: none */
    all: unset;
    outline: revert;

    position: absolute;
    inset: 0 0.5rem;
    width: calc(100% - 1rem);
    height: 100%;

    @media (orientation: portrait) {
      inset: 0.5rem 0;
      width: 100%;
      height: calc(100% - 1rem);
    }
  }
}

button {
  all: unset;
  outline: revert;
  box-sizing: inherit;
  -webkit-touch-callout: none;
  -webkit-user-drag: none;
  -webkit-user-select: none;
  user-select: none;
  touch-action: none;
}

button, .sidebar label {
  text-decoration: none;
  cursor: pointer;
  padding: 0;
  margin: 0;
  background: transparent;
  border: none;
  display: flex;
  justify-content: center;
  align-items: stretch;

  > span {
    outline: none;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    height: 100%;
    width: 100%;
  }

  &:not(:focus-visible) {
    outline: none;
  }
}

button:disabled {
  cursor: default;
}

.sidebar {
  background: #333333;
  flex: 0 1 auto;
  display: flex;
  justify-content: space-around;
  align-items: stretch;

  button, label {
    color: #ffffff;
    font-size: 60px;
    flex: 1;
    outline-offset: -0.5rem;

    @media (hover: hover) and (pointer: fine) {
      &:hover:not(:disabled):not(.selected):not(:checked) {
        background-color: #555;
      }
    }

    > span {
      padding: 20px 0;
      line-height: 1.35;
    }

    &.smaller > span {
      font-size: 80%;
    }

    &.larger > span {
      font-size: 120%;
      line-height: 1;
    }

    &.much-larger {
      overflow: hidden;

      > span {
        /* Avoid expanding the sidebar size */
        transform: scale(1.4);
        line-height: 1;
      }
    }

    &.selected {
      padding: 10px 0;

      > span {
        padding: 0;
        border-radius: 15px;
        box-shadow: inset 0 0 2px 3px white;

        @media (prefers-contrast: more) {
          border: 2px solid white;
        }
      }
    }
  }
}

#tutorialButton.active, #solutionButton.active {
  > span {
    background-color: #F9B70F;
    color: #333333;

    @media (prefers-contrast: more) {
      border: 2px solid white;
    }
  }
}

#instructionsButton.active > span {
  background-color: #0062A5;

  @media (prefers-contrast: more) {
    border: 2px solid white;
  }
}

#settings {
  button, label {
    &.faded > span {
      opacity: 0.5;
    }

    &.selected > span {
      opacity: 1;
    }
  }
}

#muteButton:not(.muted) #noSoundIcon {
  display: none;
}

#muteButton.muted #soundIcon {
  display: none;
}

#fullScreenButton:not(.fullScreen) #fullScreenOffIcon {
  display: none;
}

#fullScreenButton.fullScreen #fullScreenOnIcon {
  display: none;
}

.reverse {
  transform: scale(-1, 1);
}

.bold {
  font-weight: bold;
}

.hidden {
  display: none !important;
}

@media (orientation: landscape) {
  /* Use viewport-fit=cover and safe-area-insets for the sidebars so that
  the gutters match the sidebar backgrounds rather than the body background */
  .puzzleLinks:first-child, #controls {
    padding-left: env(safe-area-inset-left);
  }
  #settings {
    padding-right: env(safe-area-inset-right);
  }

  body, #puzzleGames {
    flex-direction: row;
  }

  .sidebar {
    flex-direction: column;

    button, label {
      &.selected {
        padding: 0 10px;
      }

      > span {
        padding: 0 20px;
      }
    }
  }

  #difficulty-group {
    flex-direction: column;
  }
}

@media (orientation: portrait) and (max-width: 600px) {
  .sidebar {
    button, label {
      font-size: 10vw;
    }
  }
}

@media (orientation: landscape) and (max-height: 600px) {
  .sidebar {
    button, label {
      font-size: 10vh;
    }
  }
}

dialog {
  margin: auto;
  position: fixed;
  padding: 0;
  inset: 0;
  z-index: 50;
  border: none;
  background: transparent;
  color: inherit;
  text-align: center;
  font-size: 1.5rem;

  /* The modal-backdrop doesn't span the screen on iOS if the dialog doesn't */
  width: 100%;
  height: 100%;

  &::backdrop {
    background: transparent;
    backdrop-filter: blur(1px);
  }

  .dialog-inner-wrapper {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .modal-backdrop {
    position: fixed;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 20px;
  }

  .modal-foreground {
    position: relative;
    box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.5);
    background-color: #333333;
    border-radius: 16px;
    width: auto;
    max-width: min(100%, 500px);
    max-height: 100%;
    /* max-height: max-content; - Doesn't work in Firefox */
    min-width: max(200px, 50%);
    /* min-height: max(200px, 50%); */
    overflow: auto;
    background-attachment: local;
    border: 1px solid transparent;

    .modal-content {
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
      padding: 1rem;
      line-height: 1.5;

      h1 {
        margin: 0;
        font-weight: bold;
        font-size: 2.75rem;

        /* Ensure space for close button */
        margin-inline: 56px;
      }

      h2 {
        font-weight: 500;
        font-size: 1.75rem;
      }

      p, h2 {
        margin-block: 16px 0;
      }

      a {
        font-size: 1rem;
        word-break: break-word;

        /* inline display has large, unexplained gap between wrapped lines */
        display: inline flow-root;

        &, &:active, &:visited {
          color: #F9B70F;
        }
      }

      summary {
        cursor: pointer;
        padding: 16px;

        > h2 {
          display: inline flow-root;
          margin: 0;
        }

        @media (hover: hover) and (pointer: fine) {
          &:hover:not(:disabled) {
            background-color: #555;
          }
        }
      }
    }
  }

  hr {
    margin-block: 16px;
    color: #555;
    border-style: solid;

    &:first-of-type {
      margin-block: 24px 0;
    }

    &:last-of-type {
      margin-block: 0 16px;
    }
  }

  ol {
    display: inline flow-root;
    text-align: left;
    font-size: 1.25rem;
    padding-inline-start: 3ch;
    margin-block: 16px;
  }

  .smaller-text {
    font-size: 1.25rem;
  }

  .link-text {
    font-size: 1rem;
    word-break: break-word;

    /* inline display has large, unexplained gap between wrapped lines */
    display: inline flow-root;
  }

  input {
    /* Prevent iOS from zooming in due to font being below 16px */
    font-size: max(1.5rem, 16px);
    padding: 0 6px;
    line-height: inherit;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 4px;
  }

  button {
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.5);
    border-radius: 8px;
    padding-inline: 12px;
    display: inline-flex;
    margin-top: 8px;
    font-size: max(1.5rem, 16px);

    @media (hover: hover) and (pointer: fine) {
      &:hover:not(:disabled) {
        background-color: #555;
      }
    }
  }

  .close-button {
    line-height: 1;
    font-size: 14px;
    position: absolute;
    top: 1rem;
    right: 1rem;
    z-index: 10;
    width: 32px;
    height: 32px;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 0;
    margin: 0;
    font-family: sans-serif;

    > span {
      /* A flex display give it a background inverted along with
      the foreground in high-contrast mode */
      display: inline flow-root;
      width: auto;
      height: auto;

      &::before {
        content: '❌' / '';
        /* Make the emoji always appear white */
        filter: brightness(0) invert(1);

        /* @media (prefers-contrast: more) {
          filter: brightness(0) invert(1);
        } */
      }
    }
  }
}

#portfolio-link {
  position: absolute;
  bottom: 1.25rem;
  color: white;
  background: #333;
  padding: 6px;
  border: 1px solid #f9b70f80;
  box-shadow: 0 0 4px 0 #f9b70f;
  border-radius: 99999px;
  font-weight: bold;
  font-size: 0.875rem;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: 6px;

  @media (hover: hover) and (pointer: fine) {
    &:hover {
      background: black;
      box-shadow: 0 0 6px 2px #f9b70f;
    }
  }

  /* On my iPhone, the container height in Safari is 393px */
  @container (height < 390px) {
    display: none;
  }

  > img {
    height: 4rem;
    border-radius: 99999px;
    pointer-events: none;
  }
}
